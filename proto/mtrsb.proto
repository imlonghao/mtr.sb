syntax = "proto3";

option go_package = "proto/";

import "google/protobuf/empty.proto";

service MtrSbWorker {
  rpc Ping (PingRequest) returns (stream PingResponse);
  rpc Version (VersionRequest) returns (VersionResponse);
  rpc Traceroute (TracerouteRequest) returns (stream TracerouteResponse);
  rpc Mtr (MtrRequest) returns (stream MtrResponse);
}

enum Protocol {
  ANY = 0;
  IPV4 = 1;
  IPV6 = 2;
}

message PingRequest {
  string host = 1;
  Protocol protocol = 2;
}

message PingResponse {
  oneof response {
    PingReply reply = 1;
    PingTimeout timeout = 2;
    PingSummary summary = 3;
    Error error = 4;
    HostLookupResult lookup = 5;
  }
}

message PingReply {
  float rtt = 1;
  int32 ttl = 2;
  int32 seq = 3;
  int32 bytes = 4;
}

message PingTimeout {
  int32 seq = 1;
}

message PingSummary {
  int32 sent = 1;
  int32 received = 2;
}

message HostLookupResult {
  string ip = 1;
}

message Error {
  string message = 1;
  string title = 2;
}

message VersionRequest {}

message VersionResponse {
  string version = 1;
}

message TracerouteRequest {
  string host = 1;
  Protocol protocol = 2;
}

message TracerouteResponse {
  oneof response {
    TracerouteReply reply = 1;
    PingTimeout timeout = 2;
    Error error = 3;
    google.protobuf.Empty completed = 4;
    HostLookupResult lookup = 5;
  }
}

message TracerouteReply {
  int32 seq = 1;
  string ip = 2;
  float rtt = 3;
}

message MtrRequest {
  string host = 1;
  Protocol protocol = 2;
}

message MtrResponse {
  uint32 pos = 1;
  oneof response {
    HostLookupResult lookup = 2;
    MtrHostLine host = 3;
    MtrTransmitLine transmit = 4;
    MtrPingLine ping = 5;
    MtrDnsLine dns = 6;
    Error error = 7;
  }
}

message MtrHostLine {
  string ip = 1;
}

message MtrTransmitLine {
  uint32 seqnum = 1;
}

message MtrPingLine {
  float rtt = 1;
  uint32 seqnum = 2;
}

message MtrDnsLine {
  string hostname = 1;
}
